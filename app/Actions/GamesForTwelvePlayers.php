<?php

namespace App\Actions;

class GamesForTwelvePlayers
{
    public static function get(int $courts)
    {
        if ($courts === 2) {
            return self::twoCourts();
        }

        if ($courts === 3) {
            return self::threeCourts();
        }

        return self::oneCourt();
    }

    private static function oneCourt()
    {
        return [
            [
                [4, 6, 8, 9],
                [0, 11, 1, 7],
                [2, 5, 3, 10],

                [3, 11, 4, 10],
                [5, 8, 2, 6],
                [7, 9, 0, 1],

                [0, 8, 5, 9],
                [1, 10, 3, 4],
                [6, 11, 2, 7],

                [2, 4, 6, 7],
                [9, 11, 5, 10],
                [0, 3, 1, 8],

                [1, 11, 2, 8],
                [3, 6, 0, 4],
                [5, 7, 9, 10],

                [6, 9, 3, 7],
                [8, 10, 1, 2],
                [4, 11, 0, 5],

                [0, 2, 4, 5],
                [7, 11, 3, 8],
                [1, 9, 6, 10],

                [10, 11, 0, 6],
                [1, 4, 2, 9],
                [3, 5, 7, 8],

                [4, 7, 1, 5],
                [6, 8, 0, 10],
                [2, 11, 3, 9],

                [0, 9, 2, 3],
                [5, 11, 1, 6],
                [7, 10, 4, 8],

                [8, 11, 4, 9],
                [2, 10, 0, 7],
                [1, 3, 5, 6],
            ],
        ];
    }

    private static function twoCourts()
    {
        return [
            [
                // 17
                [4, 6, 8, 9],
                [3, 11, 4, 10],
                [0, 8, 5, 9],
                [2, 4, 6, 7],
                [1, 11, 2, 8],
                [6, 9, 3, 7],
                [0, 2, 4, 5],
                [10, 11, 0, 6],
                [4, 7, 1, 5],
                [0, 9, 2, 3],
                [8, 11, 4, 9],
                // New games copied and moved from the original third group
                [2, 5, 3, 10],
                [6, 11, 2, 7],
                [5, 7, 9, 10],
                [1, 9, 6, 10],
                [2, 11, 3, 9],
                [1, 3, 5, 6],
            ],
            [
                // 16
                [0, 11, 1, 7],
                [5, 8, 2, 6],
                [1, 10, 3, 4],
                [9, 11, 5, 10],
                [3, 6, 0, 4],
                [8, 10, 1, 2],
                [7, 11, 3, 8],
                [1, 4, 2, 9],
                [6, 8, 0, 10],
                [5, 11, 1, 6],
                [2, 10, 0, 7],
                // New games copied and moved from the original third group
                [7, 9, 0, 1],
                [0, 3, 1, 8],
                [4, 11, 0, 5],
                [3, 5, 7, 8],
                [7, 10, 4, 8],
            ],
        ];
    }

    private static function threeCourts()
    {
        return [
            [
                [4, 6, 8, 9],
                [3, 11, 4, 10],
                [0, 8, 5, 9],
                [2, 4, 6, 7],
                [1, 11, 2, 8],
                [6, 9, 3, 7],
                [0, 2, 4, 5],
                [10, 11, 0, 6],
                [4, 7, 1, 5],
                [0, 9, 2, 3],
                [8, 11, 4, 9],
            ],
            [
                [0, 11, 1, 7],
                [5, 8, 2, 6],
                [1, 10, 3, 4],
                [9, 11, 5, 10],
                [3, 6, 0, 4],
                [8, 10, 1, 2],
                [7, 11, 3, 8],
                [1, 4, 2, 9],
                [6, 8, 0, 10],
                [5, 11, 1, 6],
                [2, 10, 0, 7],
            ],
            [
                [2, 5, 3, 10],
                [7, 9, 0, 1],
                [6, 11, 2, 7],
                [0, 3, 1, 8],
                [5, 7, 9, 10],
                [4, 11, 0, 5],
                [1, 9, 6, 10],
                [3, 5, 7, 8],
                [2, 11, 3, 9],
                [7, 10, 4, 8],
                [1, 3, 5, 6],
            ],
        ];
    }
}
